{:format :v3,
 :transitions
 [
  {:name :transition/request-booking,
 :actions
 [{:name :action/privileged-update-metadata},
   {:name :action/create-proposed-booking :config {:type :time}}]
   :actor :actor.role/customer,
   :to :state/booking-requested,
   :privileged? true}

   {:name :transition/request-update-start,
   :actor :actor.role/customer,
   :actions
   [{:name :action/update-booking :config {:type :time}},{:name :action/privileged-update-metadata}],
   :from :state/booking-requested,
   :to :state/booking-requested,
   :privileged? true}

   {:name :transition/cancel-request,
   :actions
 [{:name :action/privileged-update-metadata}]
   :actor :actor.role/operator,
   :from :state/booking-requested,
   :to :state/request-canceled,
   :privileged? true}

  {:name :transition/decline,
    :actions
    [{:name :action/decline-booking}],
   :actor :actor.role/provider,
   :from :state/booking-requested,
   :to :state/declined}

  {:name :transition/expire,
   :at
   {:fn/min [{:fn/plus
      [{:fn/timepoint [:time/first-entered-state :state/booking-requested]}
       {:fn/period ["P3D"]}]},
       {:fn/timepoint [:time/booking-start]}]}
   :from :state/booking-requested,
   :to :state/declined}

  {:name :transition/accept,
   :actor :actor.role/provider,
   :actions
   [{:name :action/accept-booking}, {:name :action/privileged-update-metadata}],
   :from :state/booking-requested,
   :to :state/accepted,
   :privileged? true}

   {:name :transition/accepted-cancel,
   :actions
   [{:name :action/cancel-booking},{:name :action/privileged-update-metadata}],
   :actor :actor.role/operator,
   :from :state/accepted,
   :to :state/canceled,
   :privileged? true}

   {:name :transition/decline-payment,
   :actor :actor.role/operator,
   :actions
    [{:name :action/cancel-booking}],
   :from :state/charged,
   :to :state/payment-failed}

   {:name :transition/charge,
   :at
   {:fn/minus [{:fn/timepoint [:time/booking-start]} {:fn/period ["P2D"]}]},
   :from :state/accepted,
   :to :state/charged}
   {:name :transition/charged-cancel,
   :actions
   [{:name :action/cancel-booking},{:name :action/privileged-update-metadata}],
   :actor :actor.role/operator,
   :from :state/charged,
   :to :state/canceled,
   :privileged? true}

   {:name :transition/update-booking-end,
   :at
   {:fn/timepoint [:time/booking-start]}
   :from :state/charged,
   :to :state/updating-booking-end}

   {:name :transition/start,
   :actor :actor.role/operator,
   :from :state/updating-booking-end,
   :to :state/active}

   {:name :transition/active-cancel,
   :actions
   [{:name :action/update-booking :config {:type :time}},{:name :action/privileged-update-metadata}],
   :actor :actor.role/operator,
   :from :state/active,
   :to :state/delivered,
   :privileged? true}

   {:name :transition/complete,
   :at {:fn/timepoint [:time/booking-end]},
   :from :state/active,
   :to :state/delivered}
],
 :notifications
 [
   ; Customer created new booking request
  {:name :notification/new-booking-request,
   :on :transition/request-booking,
   :to :actor.role/provider,
   :template :new-booking-request}

    ; Booking request expired
   {:name :notification/booking-request-auto-declined,
   :on :transition/expire,
   :to :actor.role/customer,
   :template :booking-request-auto-declined}

    ; Provider declined booking
   {:name :notification/booking-request-declined,
   :on :transition/decline,
   :to :actor.role/customer,
   :template :booking-request-declined}

   ; Booking accepted notifications
   {:name :notification/booking-request-accepted,
   :on :transition/accept,
   :to :actor.role/customer,
   :template :booking-request-accepted}
   {:name :notification/new-booking-confirmed,
   :on :transition/accept,
   :to :actor.role/provider,
   :template :booking-confirmed}

    ; Payment Declined
   {:name :notification/payment-declined-customer,
   :on :transition/decline-payment,
   :to :actor.role/customer,
   :template :payment-failed-customer}
   {:name :notification/payment-declined-provider,
   :on :transition/decline-payment,
   :to :actor.role/provider,
   :template :payment-failed-provider}

   ; Accepted Cancel
   {:name :notification/accepted-cancel-customer,
   :on :transition/accepted-cancel,
   :to :actor.role/customer,
   :template :booking-canceled-customer}
   {:name :notification/accepted-cancel-provider,
   :on :transition/accepted-cancel,
   :to :actor.role/provider,
   :template :booking-canceled-provider}

   ; Charged Cancel
   {:name :notification/charged-cancel-customer,
   :on :transition/charged-cancel,
   :to :actor.role/customer,
   :template :booking-canceled-customer}
   {:name :notification/charged-cancel-provider,
   :on :transition/charged-cancel,
   :to :actor.role/provider,
   :template :booking-canceled-provider}

   ; Active Cancel
   {:name :notification/active-cancel-customer,
   :on :transition/active-cancel,
   :to :actor.role/customer,
   :template :booking-canceled-customer}
   {:name :notification/active-cancel-provider,
   :on :transition/active-cancel,
   :to :actor.role/provider,
   :template :booking-canceled-provider}


    ; Completed
   {:name :notification/booking-completed-customer,
   :on :transition/complete,
   :to :actor.role/customer,
   :template :booking-completed-customer}
   {:name :notification/booking-completed-provider,
   :on :transition/complete,
   :to :actor.role/provider,
   :template :booking-completed-provider}

   ; Booking Reminder
   {:name :notification/booking-reminder-customer
   :on :transition/charge,
   :to :actor.role/customer,
   :template :booking-reminder-customer,
   :at
   {:fn/ignore-if-past [{:fn/minus [{:fn/timepoint [:time/booking-start]} {:fn/period ["P2DT-5M"]}]}]}
   }
   {:name :notification/booking-reminder-provider
   :on :transition/charge,
   :to :actor.role/provider,
   :template :booking-reminder-provider,
   :at
   {:fn/ignore-if-past [{:fn/minus [{:fn/timepoint [:time/booking-start]} {:fn/period ["P2DT-5M"]}]}]}
   }
]}
