.root {
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  height: 100%;
}

/* .mainContainer {
  margin-bottom: 1rem;
} */

.currencyInput {
  display: flex;
  text-align: center;
  padding: 5px 0 5px 0;
  font-size: 40px;
  margin-inline: 20%;
}

.currencyRoot {
  display: flex;
  width: 100%;
  justify-content: center;
  flex-wrap: wrap;
}

.amountLabel {
  font-size: 25px;
  padding-left: 0.25rem;
  text-align: center;
  margin-bottom: 5px;
}

.amountContainer {
  display: flex;
  flex-shrink: 1;
  flex-direction: column;
  justify-content: center;
  flex-wrap: wrap;
  padding-top: 1rem;
  min-width: 0;
  margin-bottom: 1rem;
}

.amountDisplayContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  padding-inline: 11%;
  background: var(--matterColorNegative);
  border-radius: var(--buttonBorder);
  border: none;
}

.amountDisplay {
  font-weight: 600;
  color: var(--matterColor);
}

.feeDisplayContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  padding-right: 11%;
  background: var(--matterColorNegative);
  border-radius: var(--buttonBorder);
  border: none;
}

.feeTooltipContainer {
  display: flex;
  align-items: center;
}

.submitButton {
  margin-top: auto;
}

.submitButtonRoot {
  composes: buttonFont buttonText buttonBorders buttonColors from global;

  /* Clear padding that is set for link elements looking like buttons */
  padding: 0;
  height: 3rem;
  width: 100%;

  transition: all var(--transitionStyleButton);
  cursor: pointer;
}

.orderError,
.notFoundError {
  margin: 11px 0 12px 0;

  @media (--viewportMedium) {
    margin: 10px 0 12px 0;
  }
}
.orderError {
  color: var(--failColor);
}
.notFoundError {
  color: var(--attentionColor);
}

.buttonGroupRoot {
  display: flex;
  flex-wrap: nowrap;
  margin-top: 1rem;
  height: 3rem;
}

.buttonGroup {
  composes: button buttonFont buttonText buttonColorsSecondary from global;

  border: 1px solid var(--marketplaceColor);
  min-height: 0;

  /* Clear padding that is set for link elements looking like buttons */
  padding: 0;

  &:hover {
    background-color: var(--marketplaceColor);
    color: var(--matterColorLight);
  }

  &:focus {
    background-color: var(--matterColorLight);
    color: var(--matterColor);
  }
}

.buttonGroupSelected {
  composes: button buttonFont buttonText buttonColors from global;

  min-height: 0;

  /* Clear padding that is set for link elements looking like buttons */
  padding: 0;

  &:hover,
  &:focus {
    background-color: var(--marketplaceColor);
    color: var(--matterColorLight);
  }
}

.accordion {
  margin-bottom: 1rem;
}
